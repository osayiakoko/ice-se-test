# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.10.2
        environment:
          DATABASE_URL: postgresql://postgres@localhost/icetest?sslmode=disable
      - image: cimg/postgres:14.3
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: icetest
          POSTGRES_PASSWORD: pass123
    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - restore_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Install dependencies
          command: | 
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths: [./venv]
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            python manage.py test

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  default:
    jobs:
      - build-and-test:
          filters:
            branches:
              only: dev
